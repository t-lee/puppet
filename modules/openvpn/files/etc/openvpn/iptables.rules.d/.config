#!/bin/bash
IPTABLES="/sbin/iptables"

function f_done
{
    echo "done."
}

function f_failed
{
    echo "failed."
    exit 1
}

function f_alert
{
    echo "ERROR: $1"
    exit 1
}

DIR="/etc/openvpn/iptables.rules.d"
TUN="tun0"
ETH="eth0"
VPN_GW=172.18.0.1
IP_ETH=$(ifconfig eth0|grep 'inet addr'|awk '{print $2}'|cut -f 2 -d ':')

if [ -z "${IP_ETH}" ];then
    f_alert "cannot get ipaddress for interface $ETH"
fi

UNPRIV="1024:65535"
LOG="LOG --log-level warning --log-tcp-options --log-ip-option --log-prefix "
LOG_SPOOF=$LOG"FW-ADDRESS-SPOOFING: "
LIMIT="-m limit"
LIMIT1ps="-m limit --limit 1/s"
LIMIT5ps="-m limit --limit 5/s"
LIMIT2pm="-m limit --limit 2/m"

KERNELMODULES=(
    ip_conntrack
    ip_conntrack_ftp
)

# init
function load_configs
{
    # don't allow vpn clients to access vpn server and vice versa
    $IPTABLES -A INPUT -i $TUN -d ${VPN_GW} -j $LOG "FW-INPUT-${VPN_GW}-DROP-LOG: "
    $IPTABLES -A INPUT -i $TUN -d ${VPN_GW} -j DROP
    $IPTABLES -A OUTPUT -o $TUN -s ${VPN_GW} -j $LOG "FW-OUTPUT-${VPN_GW}-DROP-LOG: "
    $IPTABLES -A OUTPUT -o $TUN -s ${VPN_GW} -j DROP

    # let's SNAT our VPN clients
    $IPTABLES -t nat -A POSTROUTING -o $ETH -j SNAT --to-source $IP_ETH

    # don't allow traffic between clients
    $IPTABLES -A FORWARD -i $TUN -o $TUN -j $LOG "FW-FWRD-TUN-TUN-DROP: "
    $IPTABLES -A FORWARD -i $TUN -o $TUN -j DROP

    # allow established connections to work properly
    $IPTABLES -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT

    unset TCP_PORTS
    unset UDP_PORTS

    # let's load our vpn client firewall rules
    for file in $(find ${BASEDIR} -name '*.fw'|sort);do
        echo -n "loading rules in '${file}' ... "
        . ${file} || f_alert "cannot source ${file}"
        f_done
    done

    # don't forward anything more
    $IPTABLES -A FORWARD -j $LOG "FW-FINAL-FORWARD-DROP: "
    $IPTABLES -A FORWARD -j DROP
}

function load_modules
{
    for i in "${KERNELMODULES[@]}"
    do
        modprobe $i || f_alert "cannot load module $i"
    done
}
